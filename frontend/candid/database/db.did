type WalletDatabase = service {
  doesStorageExist : () -> (bool) query;
  dump : () -> (
    vec record {
      principal;
      record {
        vec opt AssetDocument;
        vec opt ContactDocument;
        vec opt AllowanceDocument;
        vec opt HplSubAccountDocument;
        vec opt HplVirtualDocument;
        vec opt HplAssetDocument;
        vec opt HplCountDocument;
        vec opt HplContactDocument;
        vec opt ServiceDocument;
      };
    }
  ) query;
  pullAllowances : (nat32, opt text, nat) -> (vec AllowanceDocument) query;
  pullAssets : (nat32, opt text, nat) -> (vec AssetDocument) query;
  pullContacts : (nat32, opt text, nat) -> (vec ContactDocument) query;
  pullHplSubaccounts : (nat32, opt text, nat) -> (vec HplSubAccountDocument) query;
  pullHplVirtuals : (nat32, opt text, nat) -> (vec HplVirtualDocument) query;
  pullHplAssets : (nat32, opt text, nat) -> (vec HplAssetDocument) query;
  pullHplCount : (nat32, opt text, nat) -> (vec HplCountDocument) query;
  pullHplContacts : (nat32, opt text, nat) -> (vec HplContactDocument) query;
  pullServices : (nat32, opt text, nat) -> (vec ServiceDocument) query;
  pushAllowances : (vec AllowanceDocument) -> (vec AllowanceDocument);
  pushAssets : (vec AssetDocument) -> (vec AssetDocument);
  pushContacts : (vec ContactDocument) -> (vec ContactDocument);
  pushHplSubaccounts : (vec HplSubAccountDocument) -> (vec HplSubAccountDocument);
  pushHplVirtuals : (vec HplVirtualDocument) -> (vec HplVirtualDocument);
  pushHplAssets : (vec HplAssetDocument) -> (vec HplAssetDocument);
  pushHplCount : (vec HplCountDocument) -> (vec HplCountDocument);
  pushHplContacts : (vec HplContactDocument) -> (vec HplContactDocument);
  pushServices : (vec ServiceDocument) -> (vec ServiceDocument);
};
type ContactDocument = record {
  accountIdentifier : text;
  accounts : vec record {
    name : text;
    subaccount : text;
    subaccountId : text;
    tokenSymbol : text;
  };
  deleted : bool;
  name : text;
  "principal" : text;
  updatedAt : nat32;
};
type AssetDocument = record {
  address : text;
  decimal : text;
  deleted : bool;
  index : text;
  logo : text;
  name : text;
  shortDecimal : text;
  sortIndex : nat32;
  subAccounts : vec record {
    address : text;
    amount : text;
    currency_amount : text;
    decimal : nat32;
    name : text;
    sub_account_id : text;
    symbol : text;
    transaction_fee : text;
  };
  supportedStandards : vec text;
  symbol : text;
  tokenName : text;
  tokenSymbol : text;
  updatedAt : nat32;
};
type AllowanceDocument = record {
  asset : record {
    address : text;
    decimal : text;
    logo : text;
    name : text;
    supportedStandards : vec text;
    symbol : text;
    tokenName : text;
    tokenSymbol : text;
  };
  deleted : bool;
  id : text;
  spender : text;
  subAccountId : text;
  updatedAt : nat32;
};
type HplSubAccountDocument = record {
  id : text;
  name : text;
  ftId : text;
  ledger : text;
  updatedAt : nat32;
  deleted : bool;
};

type HplVirtualDocument = record {
  id : text;
  name : text;
  ftId : text;
  accesBy : text;
  isMint : bool;
  updatedAt : nat32;
  ledger : text;
  deleted : bool;
};

type HplAssetDocument = record {
  id : text;
  name : text;
  symbol : text;
  controller : text;
  decimals : text;
  description : text;
  updatedAt : nat32;
  ledger : text;
  deleted : bool;
};

type HplCountDocument = record {
  nFtAssets : text;
  nVirtualAccounts : text;
  nAccounts : text;
  updatedAt : nat32;
  "principal" : text;
  ledger : text;
  deleted : bool;
};

type HplContactDocument = record {
  "principal" : text;
  name : text;
  remotes : vec record {
    name : text;
    index : text;
    status : text;
    expired : text;
    amount : text;
    ftIndex : text;
    code : text;
  };
  updatedAt : nat32;
  ledger : text;
  deleted : bool;
};
type ServiceDocument = record {
  name : text;
  "principal" : text;
  assets : vec record {
    tokenSymbol : text;
    logo : text;
    tokenName : text;
    decimal : text;
    shortDecimal : text;
    "principal" : text;
  };
  updatedAt : nat32;
  deleted : bool;
};
service : () -> WalletDatabase;
